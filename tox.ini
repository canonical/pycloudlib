[tox]
# As it may be undesired to make formatting changes, by default only check
envlist = ruff, format-check, mypy, pytest, pylint, docs
skipsdist = true

[common]
envdir = {toxworkdir}/.testenv
deps =
    mypy==0.950
    pylint==2.13.9
    ruff==0.4.3
    types-mock==5.0.0
    types-pyyaml==6.0.12
    types-requests==2.31.0.6
    types-setuptools==67.3.0
    types-toml==0.10.8
    -rrequirements.txt
    -rtest-requirements.txt

[testenv:pytest]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m pytest --doctest-modules {posargs:--cov pycloudlib}

[testenv:mypy]
envdir = {[common]envdir}
deps =
    {[common]deps}
commands = {envpython} -m mypy pycloudlib examples setup.py

[testenv:ruff]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m ruff check -- pycloudlib examples setup.py

[testenv:pylint]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m pylint pycloudlib examples setup.py

[testenv:format-check]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m ruff format --check -- .

[testenv:format]
envdir = {[common]envdir}
deps = {[common]deps}
commands =
    {envpython} -m ruff format -- .

[testenv:docs]
# Docs uses a separate environment because the changedir will
# cause tox to recreate the environment.
changedir = docs
deps =
    -rrequirements.txt
    -rtest-requirements.txt
    -rdocs/requirements.txt
commands = sphinx-build -M html "." "_build"

[tip]
envdir = {toxworkdir}/.testenv-tip
deps =
    pylint
    ruff
    -rrequirements.txt

[testenv:tip-pylint]
envdir = {[tip]envdir}
deps = {[tip]deps}
commands = {envpython} -m pylint pycloudlib examples setup.py

[testenv:tip-ruff]
envdir = {[tip]envdir}
deps = {[tip]deps}
commands = {envpython} -m ruff -- pycloudlib examples setup.py

[testenv:integration-tests]
commands = {envpython} -m pytest --log-cli-level=INFO -svv {posargs:tests/integration_tests}
deps =
    -rrequirements.txt
    -rtest-requirements.txt

[testenv:integration-tests-ci]
commands = {envpython} -m pytest -m ci --log-cli-level=INFO -svv {posargs:tests/integration_tests}
deps =
  -rrequirements.txt
  -rtest-requirements.txt
  pytest-xdist

[testenv:integration-tests-main-check]
# Since we can't use GH secrets from a forked PR, run the cloud-based
# tests after the branch has merged. Better late than never
commands = {envpython} -m pytest -n 5 -m main_check --log-cli-level=DEBUG -svv {posargs:tests/integration_tests}
deps = {[testenv:integration-tests-ci]deps}
passenv =
    GOOGLE_APPLICATION_CREDENTIALS

[pytest]
testpaths = tests/unit_tests
markers =
    ci: run test on as part of continuous integration
    main_check: run test after branch has merged to main
