[tox]
# As it may be undesired to make formatting changes, by default only check
envlist = flake8, pylint, mypy, pytest, black, isort, docs
skipsdist = true

[common]
envdir = {toxworkdir}/.testenv
deps =
    black==22.3.0
    flake8-docstrings==1.6.0
    flake8==4.0.1
    mypy==0.950
    pylint==2.13.9
    types-mock==5.0.0
    types-pyyaml==6.0.12
    types-setuptools==67.3.0
    types-toml==0.10.8
    -rrequirements.txt
    -rtest-requirements.txt

[testenv:pytest]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m pytest --doctest-modules {posargs:--cov pycloudlib}

[testenv:mypy]
envdir = {[common]envdir}
deps =
    {[common]deps}
commands = {envpython} -m mypy pycloudlib examples setup.py

[testenv:pylint]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m pylint pycloudlib examples setup.py

[testenv:flake8]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m flake8 pycloudlib examples setup.py

[testenv:black]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m black . --check

[testenv:isort]
envdir = {[common]envdir}
deps = {[common]deps}
commands = {envpython} -m isort . --check-only

[testenv:format]
envdir = {[common]envdir}
deps = {[common]deps}
commands =
    {envpython} -m black .
    {envpython} -m isort .

[testenv:docs]
# Docs uses a separate environment because the changedir will
# cause tox to recreate the environment.
changedir = docs
deps =
    -rrequirements.txt
    -rtest-requirements.txt
    -rdocs/requirements.txt
commands = sphinx-build -M html "." "_build"

[tip]
envdir = {toxworkdir}/.testenv-tip
deps =
    pylint
    flake8
    flake8-docstrings
    -rrequirements.txt

[testenv:tip-pylint]
envdir = {[tip]envdir}
deps = {[tip]deps}
commands = {envpython} -m pylint pycloudlib examples setup.py

[testenv:tip-flake8]
envdir = {[tip]envdir}
deps = {[tip]deps}
commands = {envpython} -m flake8 pycloudlib examples setup.py

[testenv:integration-tests]
commands = {envpython} -m pytest --log-cli-level=INFO -svv {posargs:tests/integration_tests}
deps =
    -rrequirements.txt
    -rtest-requirements.txt

[testenv:integration-tests-ci]
commands = {envpython} -m pytest -m ci --log-cli-level=INFO -svv {posargs:tests/integration_tests}
deps =
  -rrequirements.txt
  -rtest-requirements.txt
  pytest-xdist

[testenv:integration-tests-main-check]
# Since we can't use GH secrets from a forked PR, run the cloud-based
# tests after the branch has merged. Better late than never
commands = {envpython} -m pytest -n 5 -m main_check --log-cli-level=DEBUG -svv {posargs:tests/integration_tests}
deps = {[testenv:integration-tests-ci]deps}

[flake8]
# E203: whitespace before ':' ... This goes against pep8 and black formatting
# W503: line break before binary operator
ignore = E203, W503

[pytest]
testpaths = tests/unit_tests
markers =
    ci: run test on as part of continous integration
    main_check: run test after branch has merged to main
